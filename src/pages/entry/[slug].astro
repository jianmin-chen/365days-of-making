---
import Layout from '../../layouts/Layout.astro'
import { getCollection, getEntry } from 'astro:content'
import dayjs from 'dayjs'
import { app } from '../../firebase/server'
import { getFirestore } from 'firebase-admin/firestore'

export async function getStaticPaths() {
  const entries = await getCollection('entries', ({ data }) => data)
  return entries.map((entry: { slug: string }) => ({
    params: { slug: entry.slug }
  }))
}

Date.prototype.addDays = function (days) {
  let date = new Date(this.valueOf())
  date.setDate(date.getDate() + days)
  return date
}

const { slug } = Astro.params
const data = await getEntry('entries', slug)
const { headings, Content } = await data.render()
const { date, day, title } = data.data

// Get newsletter entry, if it exists
const db = getFirestore(app)
const subscribersRef = await db.collection('subscribers').get()
const subscribers = subscribersRef.docs.map(doc => doc.data())
console.log(subscribers)

// Get webring
let webring = undefined
try {
  webring = await (
    await fetch('https://365days-of-making.vercel.app/api/webring')
  ).json()
} catch {}

export const prerender = true
---

<style is:global lang="scss">
  @import '../../ui/variables.scss';

  .container {
    margin: 0 auto;
    padding: 2rem;
    gap: 2rem;

    @media screen and (min-width: $md) {
      display: flex;
      width: 75vw;
    }

    @media screen and (min-width: $md) and (max-width: $lg) {
      width: 95vw;
    }
  }

  .toc-wrapper {
    background-color: var(--background);
    align-self: flex-start;
    min-width: calc(15vw - 4rem);
    position: sticky;
    top: 0;
    left: 0;
    z-index: 997;

    @media screen and (max-width: $md) {
      padding-top: calc((48px - 32px) / 2);
    }

    @media screen and (min-width: $md) {
      padding-top: 2rem;
    }
  }

  .toc {
    align-self: flex-start;
    font-family: var(--font-serif);
    font-size: 0.8rem;

    * {
      font-weight: normal;
      margin-top: 0;
      margin-bottom: 0.3rem;
    }
  }

  #sidebar {
    margin-left: -100vw;
    position: fixed;
    top: 0;
    left: 0;
    background-color: var(--background);
    height: 100%;
    z-index: 998;
    padding: 2rem;
    border-right: 1px dashed var(--theme);
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
    min-width: 200px;
  }

  @keyframes slide-left {
    from {
      margin-left: -100vw;
    }
    to {
      margin-left: 0;
    }
  }

  .sidebar-open {
    animation: slide-left 0.4s forwards;
  }

  .sidebar-buttons {
    display: flex;
    justify-content: space-between;

    button {
      background-color: transparent;
      border: 0;
      cursor: pointer;
      transition: color 0.2s;
      text-align: left;
    }

    .subscribe {
      color: var(--theme);
      font-family: var(--font-serif);
      font-size: 1.1rem;
      margin-bottom: calc((48px - 32px) / 2);
    }

    @media screen and (orientation: landscape) and (min-height: $sm) {
      display: none;
    }
  }

  .sidebar-button {
    background-color: transparent;
    border: 0;
    cursor: pointer;
    transition: color 0.2s;
    text-align: left;
  }

  .entry {
    @media screen and (min-width: $md) {
      max-width: calc(70vw - 4rem);
    }

    @media screen and (min-width: $lg) {
      max-width: calc(60vw - 4rem);
    }

    #title {
      margin-top: 0.995rem;
      @media screen and (min-width: $md) {
        margin-top: 0;
      }
    }
  }
</style>

<script>
  const toggle = (choice: boolean = undefined) => {
    // Open sidebar if on right screen size
    const sidebar = document.getElementById('sidebar')
    sidebar.classList.toggle('sidebar-open')
  }

  window.onload = () => {
    document.getElementById('sidebar').addEventListener('click', event => {
      event.stopPropagation()
    })

    document.querySelectorAll('.sidebar-button').forEach(button => {
      button.addEventListener('click', toggle)
    })

    document.querySelectorAll('.mobile a').forEach(heading => {
      heading.addEventListener('click', toggle)
    })
  }
</script>

<Layout title="Entry" description="Entry" popup={true} webring={webring}>
  <div id="sidebar">
    <button
      class="sidebar-button"
      style={{ fontSize: '1.5rem', marginBottom: '0.995rem' }}>&larr;</button
    >
    <div class="toc mobile">
      {
        headings.map((heading, idx) => {
          let prevDepth = idx > 0 ? headings[idx - 1].depth : Infinity
          switch (heading.depth) {
            case 1:
              return (
                <h1>
                  <a href={`#${heading.slug}`}>{heading.text}</a>
                </h1>
              )
            case 2:
              return (
                <h2>
                  <a
                    href={`#${heading.slug}`}
                    style={{ marginLeft: prevDepth < 2 ? '4px' : '' }}>
                    {heading.text}
                  </a>
                </h2>
              )
            case 3:
              return (
                <h3>
                  <a
                    href={`#${heading.slug}`}
                    style={{ marginLeft: prevDepth < 3 ? '5px' : '' }}>
                    {heading.text}
                  </a>
                </h3>
              )
            case 4:
              return (
                <h4>
                  <a
                    href={`#${heading.slug}`}
                    style={{ marginLeft: prevDepth < 3 ? '6px' : '' }}>
                    {heading.text}
                  </a>
                </h4>
              )
            case 5:
              return (
                <h5>
                  <a
                    href={`#${heading.slug}`}
                    style={{ marginLeft: prevDepth < 3 ? '7px' : '' }}>
                    {heading.text}
                  </a>
                </h5>
              )
            case 6:
              return (
                <h6>
                  <a
                    href={`#${heading.slug}`}
                    style={{ marginLeft: prevDepth < 3 ? '8px' : '' }}>
                    {heading.text}
                  </a>
                </h6>
              )
          }
        })
      }
    </div>
  </div>
  <div class="container">
    <div class="toc-wrapper">
      <div class="sidebar-buttons">
        <button
          class="sidebar-button"
          style={{ marginLeft: 'calc(32px - 48px)' }}>
          <svg
            fill-rule="evenodd"
            clip-rule="evenodd"
            stroke-linejoin="round"
            stroke-miterlimit="1.414"
            xmlns="http://www.w3.org/2000/svg"
            aria-label="menu"
            viewBox="0 0 32 32"
            preserveAspectRatio="xMidYMid meet"
            fill="currentColor"
            width="48"
            height="48"
            ><g
              ><path
                d="M9,10c0,-0.552 0.448,-1 1,-1l12,0c0.552,0 1,0.448 1,1c0,0.552 -0.448,1 -1,1l-12,0c-0.552,0 -1,-0.448 -1,-1Z"
              ></path><path
                d="M9,15c0,-0.552 0.448,-1 1,-1l12,0c0.552,0 1,0.448 1,1c0,0.552 -0.448,1 -1,1l-12,0c-0.552,0 -1,-0.448 -1,-1Z"
              ></path><path
                d="M9,20c0,-0.552 0.448,-1 1,-1l12,0c0.552,0 1,0.448 1,1c0,0.552 -0.448,1 -1,1l-12,0c-0.552,0 -1,-0.448 -1,-1Z"
              ></path></g
            ></svg
          >
        </button>
        <button class="subscribe">Subscribe to updates!</button>
      </div>
      <div class="toc desktop">
        {
          headings.map((heading, idx) => {
            let prevDepth = idx > 0 ? headings[idx - 1].depth : Infinity
            switch (heading.depth) {
              case 1:
                return (
                  <h1>
                    <a href={`#${heading.slug}`}>{heading.text}</a>
                  </h1>
                )
              case 2:
                return (
                  <h2>
                    <a
                      href={`#${heading.slug}`}
                      style={{ marginLeft: prevDepth < 2 ? '4px' : '' }}>
                      {heading.text}
                    </a>
                  </h2>
                )
              case 3:
                return (
                  <h3>
                    <a
                      href={`#${heading.slug}`}
                      style={{ marginLeft: prevDepth < 3 ? '5px' : '' }}>
                      {heading.text}
                    </a>
                  </h3>
                )
              case 4:
                return (
                  <h4>
                    <a
                      href={`#${heading.slug}`}
                      style={{ marginLeft: prevDepth < 3 ? '6px' : '' }}>
                      {heading.text}
                    </a>
                  </h4>
                )
              case 5:
                return (
                  <h5>
                    <a
                      href={`#${heading.slug}`}
                      style={{ marginLeft: prevDepth < 3 ? '7px' : '' }}>
                      {heading.text}
                    </a>
                  </h5>
                )
              case 6:
                return (
                  <h6>
                    <a
                      href={`#${heading.slug}`}
                      style={{ marginLeft: prevDepth < 3 ? '8px' : '' }}>
                      {heading.text}
                    </a>
                  </h6>
                )
            }
          })
        }
      </div>
    </div>
    <div class="entry">
      <div class="prose">
        <p style={{ color: 'var(--theme)', marginBottom: '8px' }}>
          {dayjs(date.addDays(1)).format('MMM DD, YYYY')}
        </p>
        <h1 style={{ lineHeight: 1.2 }} id="title">Day {day}: {title}</h1>
        <Content />
        <p>Have a question? Fire below.</p>
        <script
          src="https://giscus.app/client.js"
          data-repo="jianmin-chen/365days-of-making"
          data-repo-id="R_kgDOKRAyPw"
          data-category="Announcements"
          data-category-id="DIC_kwDOKRAyP84CZLWE"
          data-mapping="pathname"
          data-strict="0"
          data-reactions-enabled="0"
          data-emit-metadata="0"
          data-input-position="top"
          data-theme="light"
          data-lang="en"
          data-loading="lazy"
          crossorigin="anonymous"
          async></script>
      </div>
    </div>
  </div>
</Layout>
