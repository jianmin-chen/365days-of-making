---
import Layout from '../layouts/Layout.astro'
import { getCollection } from 'astro:content'
import dayjs from 'dayjs'

const data = await getCollection('entries')
let entries = {}
data.map(entry => {
  let excerpt = 'No excerpt provided.'
  let nlnl = entry.body.trim().indexOf('\n\n')
  if (nlnl !== -1) excerpt = `${entry.body.slice(0, nlnl)}`
  entries[entry.data.day] = { ...entry, excerpt }
})

Date.prototype.addDays = function (days) {
  let date = new Date(this.valueOf())
  date.setDate(date.getDate() + days)
  return date
}

const getDates = (startDate: Date, stop: number) => {
  let dates = []
  let curr = startDate
  for (let i = 0; i < stop; i++) {
    dates.push(dayjs(curr).format('MMM DD, YYYY'))
    curr = curr.addDays(1)
  }
  return dates
}

const dates = getDates(new Date(import.meta.env.PUBLIC_START_DATE), 365)

// Get webring
const webring = await (
  await fetch('https://365days-of-making.vercel.app/api/webring')
).json()

export const prerender = true
---

<style is:global lang="scss">
  @import '../ui/variables.scss';

  #map {
    display: flex;
    flex-wrap: wrap;
    padding: 2rem;
    gap: 2rem;
    align-items: stretch;

    @media screen and (max-width: $lg) {
      flex-direction: column;
      gap: 1rem;
    }

    @media screen and (min-width: $md) {
      .entry:nth-child(4n + 5) {
        &::before {
          border-top: 3px dotted var(--theme);
          content: '';
          position: absolute;
          transform: rotate(345deg);
          top: 0;
          left: 0;
          width: calc(100vw - 4rem);
          z-index: 0;
        }
      }

      .entry:nth-child(4n) {
        &::after {
          width: 0;
        }
      }
    }

    .entry {
      box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1);
      border-left: 1px solid var(--theme);
      border-bottom: 1px solid var(--theme);
      border-right: 1px solid var(--theme);
      flex: calc(25% - 2rem);
      transition: transform 0.1s;
      position: relative;
      display: flex;
      flex-direction: column;

      &::after {
        position: absolute;
        content: '';

        @media screen and (min-width: $md) {
          left: 100%;
          top: 50%;
          border-top: 3px dotted var(--theme);
          width: 2rem;
        }

        @media screen and (max-width: $md) {
          top: 100%;
          left: 50%;
          border-left: 3px dotted var(--theme);
          height: 2rem;
        }
      }

      .header {
        background-color: var(--theme);
        color: white;
        padding: 1rem 2rem;
        line-height: 1.3;
        position: relative;
        z-index: 1;

        p {
          margin-bottom: 0;
        }

        h1 {
          color: white;
          margin-top: 0;
        }
      }

      .excerpt {
        background-color: #f3f0ed;
        padding: 1rem;
        font-size: 1.3rem;
        position: relative;
        z-index: 999;
        height: 100%;
      }

      &.incomplete {
        background-color: #eee;

        .excerpt {
          display: flex;
          justify-content: center;
          align-items: center;

          svg {
            fill: var(--theme);
          }
        }
      }
    }
  }
</style>

<Layout
  title="Entries"
  description="Timeline of entries!"
  popup={false}
  webring={webring}>
  <div id="map">
    {
      dates.map((date, idx) => {
        return (
          <div
            class={`entry prose ${
              entries[idx + 1] === undefined && 'incomplete'
            }`}>
            <div class="header">
              <p>{date}</p>
              <h1>Day {idx + 1}</h1>
            </div>
            {entries[idx + 1] !== undefined ? (
              <div class="excerpt">
                <div set:html={entries[idx + 1].excerpt} />
                <a href={`/entry/${entries[idx + 1].slug}`}>Read more</a>
              </div>
            ) : (
              <div class="excerpt">
                <svg
                  fillRule="evenodd"
                  clip-rule="evenodd"
                  strokeLinejoin="round"
                  strokeMiterlimit="1.414"
                  xmlns="http://www.w3.org/2000/svg"
                  aria-label="private-outline"
                  viewBox="0 0 32 32"
                  preserveAspectRatio="xMidYMid meet"
                  fill="currentColor"
                  width="48"
                  height="48">
                  <g transform="translate(6 4)">
                    <path d="M 13.1955 2.23785C 12.44 2.04071 11.4794 1.99933 10 2C 8.52065 1.99933 7.55997 2.04071 6.8045 2.23785C 6.1992 2.38824 5.97868 2.58063 5.82935 2.78922C 5.62134 3.07977 5.37756 3.66086 5.21555 4.8999C 5.09674 5.79526 5.03786 6.87158 5.01379 8.21457C 6.31618 8.05185 7.9507 8 10 8C 12.0493 8 13.6838 8.05185 14.9862 8.21457C 14.9621 6.87158 14.9033 5.79526 14.7845 4.8999C 14.6225 3.66086 14.3787 3.07977 14.1707 2.78922C 14.0213 2.58066 13.8008 2.38824 13.1955 2.23785ZM 16.992 8.64078C 16.893 0.897217 15.8017 0 10 0C 4.19827 0 3.107 0.897217 3.00796 8.64078C 0.403839 9.52625 0 11.5516 0 16C 0 23 1 24 10 24C 19 24 20 23 20 16C 20 11.5516 19.5962 9.52625 16.992 8.64078ZM 2.25122 12.2217C 2.04568 13.1338 1.99948 14.2954 2 16C 1.99948 17.7046 2.04568 18.8662 2.25122 19.7783C 2.42407 20.5734 2.66103 20.8885 2.89148 21.0771C 3.17363 21.3079 3.72681 21.5756 4.93619 21.7563C 6.18376 21.946 7.78571 22.0003 10 22C 12.2143 22.0003 13.8162 21.946 15.0638 21.7563C 16.2732 21.5756 16.8264 21.308 17.1085 21.0771C 17.339 20.8885 17.5759 20.5734 17.7488 19.7783C 17.9543 18.8662 18.0005 17.7046 18 16C 18.0005 14.2954 17.9543 13.1338 17.7488 12.2217C 17.5759 11.4266 17.339 11.1115 17.1085 10.9229C 16.8264 10.692 16.2732 10.4244 15.0638 10.2437C 13.8162 10.054 12.2143 9.99969 10 10C 7.78571 9.99969 6.18376 10.054 4.93619 10.2437C 3.72681 10.4244 3.17363 10.6921 2.89148 10.9229C 2.66103 11.1115 2.42407 11.4266 2.25122 12.2217ZM 11 16.7325C 11.5978 16.3867 12 15.7403 12 15C 12 13.8954 11.1046 13 10 13C 8.89543 13 8 13.8954 8 15C 8 15.7403 8.40221 16.3867 9 16.7325L 9 18C 9 18.5523 9.44772 19 10 19C 10.5523 19 11 18.5523 11 18L 11 16.7325Z" />
                  </g>
                </svg>
              </div>
            )}
          </div>
        )
      })
    }
  </div>
</Layout>
